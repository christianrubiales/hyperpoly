{
  "version-used": "<span style=\"color: gray\"><em>Preview 5.0</em></span>",
  "show-version": "<span style=\"color: gray\"><em>select</em> About Preview <em>in</em> Preview <em>menu</em></span>",

"grammar-invocation": {
  "interpreter": "<span style=\"color: gray\"><em>none</em></span>",
  "shebang": "<span style=\"color: gray\"><em>none</em></span>",
  "repl": "<span style=\"color: gray\"><em>none</em></span>",
  "save-image": "",
  "load-image": "",
  "identifiers-case-sensitive": "<span style=\"color: gray\"><em>yes</em></span>",
  "eol-comment": "1 1 add <span style=\"color: gray\">% addition</span>",
  "multiple-line-comment": "<span style=\"color: gray\"><em>none</em></span>"
},
"var-expr": {
  "assignment": "/a 3 def<br />7 currentdict /a get add",
  "increment-and-decrement": "",
  "null<br-/>": "null",
  "null-test<br-/>": "",
  "undefined-variable-access": ""
},
"stack": {
  "stacks": "<span style=\"color: gray\"><em>operand<br />dictionary<br />execution<br />graphics state<br />clipping path</em></span>",
  "stack-underflow": "",
  "display-stack": "<span style=\"color: gray\"><em>none</em></span>",
  "clear-stack": "clear",
  "count-stack": "count",
  "copy-stack<br-/>": "count copy",
  "(a----)": "pop",
  "(a----a-a)": "dup",
  "(a-b----b-a)": "exch",
  "(a-b----b)": "exch pop",
  "(a-b----a-b-a)": "1 index",
  "(a-b----b-a-b)": "dup 3 1 roll",
  "(a-b-c----b-c-a)": "3 -1 roll",
  "(a-b-c----a-b-c-a)": "2 index",
  "(a-b-c-d----b-c-d-a)": "4 -1 roll"
},
"arithmetic-logic": {
  "true-false": "true false",
  "falsehoods": "false",
  "logical-op": "and or not xor",
  "relational-op": "eq ne gt lt ge le",
  "min-max": "",
  "three-val-comparision": "",
  "float-literal": "3.14<br />3.14e0",
  "num-predicates": "",
  "arithmetic-op": "add sub mul div idiv mod exp",
  "unary-negation": "neg",
  "integer-division": "",
  "integer-division-by-zero": "",
  "float-division": "",
  "float-division-by-zero": "",
  "power": "",
  "sqrt": "",
  "sqrt(-2)": "",
  "transcendental-func": "sqrt exp ln sin cos <span style=\"color: gray\"><em>none</em></span> <span style=\"color: gray\"><em>none</em></span> <span style=\"color: gray\"><em>none</em></span> <span style=\"color: gray\"><em>none</em></span> atan<br /><span style=\"color: gray\"><em>also</em> log <em>for base 10 logarithm</em></span>",
  "transcendental-const": "",
  "float-truncation": "round truncate floor ceiling",
  "absolute-value": "abs",
  "int-overflow": "",
  "float-overflow<br-/>": "",
  "float-limits": "",
  "rational-construction": "",
  "rational-decomposition": "",
  "complex-construction": "",
  "complex-conjugation": "",
  "random-number<br-/>": "<span style=\"color: gray\">rand <em>generates random integer from 0 to 2<sup>31</sup>-1</em>:</span><br />rand 100 mod<br /><span style=\"color: gray\"><em>none</em></span><br /><span style=\"color: gray\"><em>none</em></span>",
  "random-seed": "13 srand",
  "bit-op": "and or xor not<br /><span style=\"color: gray\"><em>logical shift by 3:</em></span><br />7 3 bitshift<br />7 -3 bitshift",
  "binary-octal-hex-literals": "",
  "radix": ""
},
"strings": {
  "string-literals": "(don't say \"no\")<br /><span style=\"color: gray\"><em>parens and backslashes are escaped with backslashes. Balanced parens do not need to be escaped.</em></span>",
  "string-escapes": "\\b \\f \\n \\r \\t \\\\ \\( \\) \\<span style=\"color: gray\"><em>ooo</em></span>",
  "newline-in-literal": "<span style=\"color: gray\"><em>no, use \\n</em></span>",
  "character-access": "(hello) 0 get",
  "length": "(hello) length",
  "concatenate": "",
  "split": "",
  "join": "",
  "trim": "",
  "pad": "",
  "number-to-string": "7 (12) cvi add<br />73.9 (.037) cvr add",
  "string-to-number": "",
  "case-manipulation": "",
  "sprintf": ""
},
"regex": {
  "regex-literal": "",
  "char-class-abbrev": "",
  "regex-anchors": "",
  "regex-test": "",
  "case-insensitive-regex": "",
  "regex-modifiers": "",
  "subst": "",
  "group-capture": "",
  "regex-back-ref": ""
},
"dates-time": {
  "broken-down-date-time-type": "",
  "current-date-time": "",
  "unix-epoch": "",
  "current-unix-epoch": "",
  "date-time-to-str": "",
  "format-date": "",
  "parse-date": "",
  "date-subtraction": "",
  "add-duration": "",
  "date-parts": "",
  "time-parts": "",
  "build-date-time": "",
  "dow-doy": "",
  "microseconds": "",
  "sleep": "",
  "timeout": "",
  "cpu-usage": ""
},
"arrays": {
  "array-literal": "[ 1 2 3 ]",
  "array-size": "[ 1 2 3 ] length",
  "empty-array-test": "",
  "array-lookup": "[ 1 2 3 ] 0 get",
  "array-update": "",
  "array-out-of-bounds": "<span style=\"color: gray\">rangecheck <em>error</em></span>",
  "array-element-index": "",
  "slice-array": "",
  "slice-to-end": "",
  "manipulate-back": "",
  "manipulate-front": "",
  "concatenate-array": "",
  "replicate": "",
  "copy": "",
  "array-iteration": "[ 50 100 150 ] { 100 moveto (foo) show } forall",
  "indexed-iteration": "",
  "iterate-over-range": "",
  "instantiate-range-as-array": "",
  "reverse": "",
  "sort": "",
  "dedupe": "",
  "membership": "",
  "intersection": "",
  "union": "",
  "relative-complement,-symmetric-difference": "",
  "map": "",
  "filter": "",
  "reduce": "",
  "min-and-max-element": "",
  "universal-and-existential-tests": "",
  "sample-w/o-replacement": "",
  "zip": ""
},
"heap": {
  "allocate-region-on-heap": "",
  "free-region-on-heap": "",
  "resize-region-on-heap": "",
  "write": "",
  "read": ""
},
"dictionaries": {
  "dictionary-literal": "<span style=\"white-space: pre-wrap;\"> &lt;&lt; </span>1 (one) 2 (two) 3 (three)<span style=\"white-space: pre-wrap;\"> &gt;&gt; </span>",
  "dictionary-length": "<span style=\"white-space: pre-wrap;\"> &lt;&lt; </span>1 (one) 2 (two)<span style=\"white-space: pre-wrap;\"> &gt;&gt; </span>length",
  "dictionary-element-access": "<span style=\"color: gray\"><em>pushes</em> (one) <em>onto stack:</em></span><br /><span style=\"white-space: pre-wrap;\"> &lt;&lt; </span>1 (one) 2 (two)<span style=\"white-space: pre-wrap;\"> &gt;&gt; </span>1 get",
  "element-not-found-behavior": "<span style=\"color: gray\">undefined <em>error</em></span>",
  "set-dictionary-element": "/h<span style=\"white-space: pre-wrap;\"> &lt;&lt; </span>1 (one) 2 (two)<span style=\"white-space: pre-wrap;\"> &gt;&gt; </span>def<br />currentdict /h get 3 (three) put",
  "range": ""
},
"functions": {
  "def-func": "/add3 { add add } def",
  "invoke-func": "3 7 5 add3",
  "missing-arg": "<span style=\"color: gray\"><em>a stack underflow error results if the expected number of arguments is not on the stack</em></span>",
  "retval": "<span style=\"color: gray\"><em>values are returned by pushing them onto the stack</em></span>",
  "multiple-retval": "<span style=\"color: gray\"><em>no limit on the number of values a function can leave on the stack</em></span>",
  "recursive-func": "",
  "mutually-recursive-func": "",
  "anonymous-func": "{ 2 add }",
  "invoke-anonymous-func": "3 { 2 add } exec",
  "closure": "",
  "func-as-val": "",
  "compose-func": "",
  "partial-application": "",
  "fried-quotation": ""
},
"execution-control": {
  "notes-on-conditionals": "",
  "ifelse": "x 0 gt { x } { x neg } ifelse",
  "if": "<span style=\"color: gray\"><em>bool</em></span> { <span style=\"color: gray\"><em>if true</em></span> } if",
  "if-else": "<span style=\"color: gray\"><em>bool</em></span> { <span style=\"color: gray\"><em>if true</em></span> } { <span style=\"color: gray\"><em>if false</em></span> } ifelse",
  "notes-on-loops": "<span style=\"color: gray\">exit <em>terminates innermost</em> for, forall, loop, <em>or</em> repeat</span>",
  "conditional-loop": "{<br /><span style=\"white-space: pre-wrap;\">  </span><span style=\"color: gray\"><em>bool</em></span> { exit } if<br /><span style=\"white-space: pre-wrap;\">  </span><span style=\"color: gray\"><em>code</em></span><br />} loop",
  "infinite-loop": "{ <span style=\"color: gray\"><em>code</em></span> } loop",
  "loop-10-times": "10 { <span style=\"color: gray\"><em>code</em></span> } repeat",
  "for-loop": "<span style=\"color: gray\"><em>iterator value on stack</em></span><br />0 20 200 { 72 exch moveto (foo) show } for",
  "for-loop-step-2": ""
},
"exceptions": {
  "notes-on-exceptions": "",
  "raise-exception": "$error /errorname (foo) put stop",
  "handle-exception": "{<br /><span style=\"white-space: pre-wrap;\">  </span><span style=\"color: gray\"><em>risky code</em></span><br />} stopped { <span style=\"color: gray\"><em>handle error</em></span> }"
},
"file-handles": {
  "standard-file-handles": "",
  "read-line-from-stdin": "",
  "write-line-to-stdout": "",
  "write-to-stdout": "",
  "redirect-to-file": ""
},
"files": {
  "file-test,-regular-file-text": "",
  "file-size": "",
  "is-file-readable,-writable,-executable": "",
  "set-file-permissions": "",
  "touch-file": "",
  "copy-file,-remove-file,-rename-file": "",
  "create-symlink,-symlink-test,-readlink": "",
  "generate-unused-file-name": ""
},
"directories": {
  "working-directory<br-/>": "",
  "build-pathname": "",
  "dirname-and-basename": "",
  "absolute-pathname": "",
  "make-directory": "",
  "recursive-copy": "",
  "remove-empty-directory": "",
  "remove-directory-and-contents": "",
  "directory-test": ""
},
"processes-environment": {
  "cmd-line-arg": "",
  "program-name": "",
  "env-var": "",
  "user-id-name": "",
  "exit": "quit",
  "external-cmd": "",
  "backticks": "",
  "pid": "",
  "signal-handler": "",
  "send-signal": ""
},
"libraries-namespaces": {
  "interpret-file": "",
  "load-library": "",
  "hot-patch": "",
  "load-error": "",
  "main-routine-in-library": "",
  "library-path": "",
  "library-path-environment-variable": "",
  "namespace-declaration": "",
  "unqualified-import-of-namespace": ""
},
"reflection": {
  "query-data-type": "3 type",
  "pretty-print": "",
  "dump-location-and-stack": "",
  "show-code": "",
  "documentation": ""
},
"graphics": {
  "default-location-of-origin": "<span style=\"color: gray\"><em>lower left corner of page</em></span>",
  "default-scale": "<span style=\"color: gray\"><em>72 units per inch</em></span>",
  "text": "72 72 moveto (hello) show",
  "render-page-and-start-a-new-one": "showpage",
  "set-current-font": "/Helvetica 20 selectfont",
  "built-in-fonts": "/Times-Roman /Times-Italic<br />/Times-Bold /Times-BoldItalic<br />/Helvetica /Helvetica-Oblique<br />/Helvetica-Bold /Helvetica-BoldOblique<br />/Courier /Courier-Bold<br />/Courier-Oblique /Courier-BoldOblique",
  "closed-polygon": "<span style=\"color: gray\"><em>creates outline of triangle:</em></span><br />newpath<br />72 72 moveto<br />144 144 lineto<br />144 72 lineto<br />closepath<br />stroke",
  "set-current-line-width": "<span style=\"color: gray\"><em>default value is 1:</em></span><br />2 setlinewidth",
  "arc-of-circle": "<span style=\"color: gray\"><em>creates half-circular arc centered at (144,144) with radius 40:</em></span><br />newpath<br />144 144 40 90 270 arc<br />stroke",
  "bezier-curve": "<span style=\"color: gray\"><em>control points are (144,144), (288,144), (288,288), and (144,288):</em></span><br />newpath<br />144 144 moveto<br />288 144 288 288 144 288 curveto<br />stroke",
  "filled-polygon": "<span style=\"color: gray\"><em>creates solid triangle:</em></span><br />newpath<br />72 72 moveto<br />144 144 lineto<br />144 72 lineto<br />closepath<br />fill",
  "set-color": "<span style=\"color: gray\"><em>default color is black. Sets current color to red:</em></span><br />1.0 0.0 0.0 setrgbcolor",
  "translate-coordinates": "<span style=\"color: gray\"><em>move origin 72 units up and to the right:</em></span><br />72 72 translate",
  "scale-coordinates": "<span style=\"color: gray\"><em>increase size of unit 72-fold:</em></span><br />72 72 scale",
  "rotate-coordinates": "<span style=\"color: gray\"><em>rotate coordinates 90 degrees counterclockwise:</em></span><br />90 rotate",
  "items-in-graphics-state": "currentpoint<br />currentrgbcolor<br />currentfont<br />currentmatrix<br />currentlinewidth",
  "save-graphics-state": "gsave",
  "restore-graphics-state": "grestore"
}
}
