{
"version": {
  "version-used": "<span style=\"color: gray\"><em>Gforth 0.70</em></span>",
  "show-version": "$ gforth <span style=\"white-space: pre-wrap;\">--</span>version"
},
"grammar-invocation": {
  "interpreter": "$ echo \"1 1 + . cr bye\" &gt; /tmp/add.forth<br /><br />$ gforth /tmp/add.forth",
  "shebang": "<span style=\"color: gray\"><em>none</em></span>",
  "repl": "$ gforth",
  "save-image": "",
  "load-image": "",
  "identifiers-case-sensitive": "<span style=\"color: gray\"><em>no</em></span>",
  "eol-comment": "1 1 + <span style=\"color: gray\">\\ addition</span>",
  "multiple-line-comment": "1 1 <span style=\"color: gray\">( comment<br />another comment )</span> +"
},
"var-expr": {
  "assignment": "variable a<br />3 a !<br />7 a @ +",
  "increment-and-decrement": "7 1+<br />7 1-",
  "null<br-/>": "<span style=\"color: gray\"><em>none</em></span>",
  "null-test<br-/>": "<span style=\"color: gray\"><em>none</em></span>",
  "undefined-variable-access": ""
},
"stack": {
  "stacks": "<span style=\"color: gray\"><em>data<br />floating point<br />return<br />locals</em></span>",
  "stack-underflow": "",
  "display-stack": ".s<br /><span style=\"color: gray\"><em>displays float stack:</em></span><br />f.s",
  "clear-stack": "<span style=\"color: gray\"><em>clears data stack:</em></span><br />clearstack<br /><span style=\"color: gray\"><em>clears data and float stack:</em></span><br />clearstacks",
  "count-stack": "depth<br />fdepth",
  "copy-stack<br-/>": "",
  "(a----)": "drop<br /><span style=\"color: gray\"><em>displays item being dropped:</em></span><br />.<br /><span style=\"color: gray\"><em>operate on float stack:</em></span><br />fdrop<br />f.",
  "(a----a-a)": "dup<br />fdup",
  "(a-b----b-a)": "swap<br />fswap",
  "(a-b----b)": "nip<br />fnip",
  "(a-b----a-b-a)": "over<br />fover",
  "(a-b----b-a-b)": "tuck<br />ftuck",
  "(a-b-c----b-c-a)": "rot<br />frot",
  "(a-b-c----a-b-c-a)": "2 pick<br />2 fpick",
  "(a-b-c-d----b-c-d-a)": "3 roll<br />3 froll"
},
"arithmetic-logic": {
  "true-false": "true false<br />-1 0",
  "falsehoods": "false 0",
  "logical-op": "and or invert xor",
  "relational-op": "<span style=\"white-space: pre-wrap;\">=</span> &lt;&gt; &gt; &lt; &gt;= &lt;=<br />f= f&lt;&gt; f&gt; f&lt; f&gt;= f&lt;=",
  "min-max": "1 2 min<br />1 2 max",
  "three-val-comparision": "",
  "float-literal": "<span style=\"color: gray\"><em>must contain an</em> e:</span><br />3.14e0",
  "num-predicates": "",
  "arithmetic-op": "+ - * <span style=\"color: gray\"><em>??</em></span> / mod <span style=\"color: gray\"><em>??</em></span><br /><span style=\"color: gray\"><em>float stack operators:</em></span><br />f+ f- f* f/ f",
  "unary-negation": "negate<br />fnegate",
  "integer-division": "",
  "integer-division-by-zero": "",
  "float-division": "",
  "float-division-by-zero": "",
  "power": "2e0 32e0 f",
  "sqrt": "2e0 fsqrt",
  "sqrt(-2)": "<span style=\"color: gray\"><em>pushes this non-literal value onto stack:</em></span><br />-na",
  "transcendental-func": "fexp fln fsin fcos ftan fasin facos fatan fatan2<br /><span style=\"color: gray\"><em>also</em> flog <em>for base 10 logarithm</em></span>",
  "transcendental-const": "pi<br />1e0 fexp",
  "float-truncation": "<span style=\"color: gray\"><em>return floats</em></span><br />fround <span style=\"color: gray\"><em>??</em></span> floor <span style=\"color: gray\"><em>??</em></span>",
  "absolute-value": "-7 abs<br />-7e0 fabs",
  "int-overflow": "<span style=\"color: gray\"><em>modular arithmetic</em></span>",
  "float-overflow<br-/>": "",
  "float-limits": "",
  "rational-construction": "",
  "rational-decomposition": "",
  "complex-construction": "",
  "complex-conjugation": "",
  "random-number<br-/>": "",
  "random-seed": "",
  "bit-op": "and or xor invert<br /><span style=\"color: gray\"><em>logical shift by 3:</em></span><br />7 3 lshift<br />7 3 rshift<br /><span style=\"color: gray\"><em>arithmetic shift by 1:</em></span><br />7 2*<br />7 2/",
  "binary-octal-hex-literals": "",
  "radix": ""
},
"strings": {
  "string-literals": "<span style=\"color: gray\"><em>allocates memory for string and pushes address and length onto stack:</em></span><br />s\\\" don't say \\\"no\\\"\"",
  "string-escapes": "\\a \\b \\e \\f \\n \\r \\t \\v \\\" \\\\ \\, \\<span style=\"color: gray\"><em>ooo</em></span> \\x<span style=\"color: gray\"><em>xx</em></span>",
  "newline-in-literal": "<span style=\"color: gray\"><em>no, use \\n</em></span>",
  "character-access": "",
  "length": "",
  "concatenate": "",
  "split": "",
  "join": "",
  "trim": "",
  "pad": "",
  "number-to-string": "",
  "string-to-number": "",
  "case-manipulation": "",
  "sprintf": ""
},
"regex": {
  "regex-literal": "",
  "char-class-abbrev": "",
  "regex-anchors": "",
  "regex-test": "",
  "case-insensitive-regex": "",
  "regex-modifiers": "",
  "subst": "",
  "group-capture": "",
  "regex-back-ref": ""
},
"dates-time": {
  "broken-down-date-time-type": "",
  "current-date-time": "<span style=\"color: gray\">\\ pushes six values onto stack:</span><br />date&amp;time",
  "unix-epoch": "",
  "current-unix-epoch": "",
  "date-time-to-str": "",
  "format-date": "",
  "parse-date": "",
  "date-subtraction": "",
  "add-duration": "",
  "date-parts": "",
  "time-parts": "",
  "build-date-time": "",
  "dow-doy": "",
  "microseconds": "",
  "sleep": "",
  "timeout": "",
  "cpu-usage": ""
},
"arrays": {
  "array-literal": "",
  "array-size": "",
  "empty-array-test": "",
  "array-lookup": "",
  "array-update": "",
  "array-out-of-bounds": "",
  "array-element-index": "",
  "slice-array": "",
  "slice-to-end": "",
  "manipulate-back": "",
  "manipulate-front": "",
  "concatenate-array": "",
  "replicate": "",
  "copy": "",
  "array-iteration": "",
  "indexed-iteration": "",
  "iterate-over-range": "",
  "instantiate-range-as-array": "",
  "reverse": "",
  "sort": "",
  "dedupe": "",
  "membership": "",
  "intersection": "",
  "union": "",
  "relative-complement,-symmetric-difference": "",
  "map": "",
  "filter": "",
  "reduce": "",
  "min-and-max-element": "",
  "universal-and-existential-tests": "",
  "sample-w/o-replacement": "",
  "zip": ""
},
"heap": {
  "allocate-region-on-heap": "<span style=\"color: gray\"><em>pushes address and</em> 0 <em>onto stack:</em></span><br />10 allocate",
  "free-region-on-heap": "free",
  "resize-region-on-heap": "",
  "write": "",
  "read": ""
},
"dictionaries": {
  "dictionary-literal": "",
  "dictionary-length": "",
  "dictionary-element-access": "",
  "element-not-found-behavior": "",
  "set-dictionary-element": "",
  "range": ""
},
"functions": {
  "def-func": ": add3 + + ;",
  "invoke-func": "3 7 5 add3",
  "missing-arg": "<span style=\"color: gray\"><em>a stack underflow error results if the expected number of arguments is not on the stack</em></span>",
  "retval": "<span style=\"color: gray\"><em>values are returned by pushing them onto the stack</em></span>",
  "multiple-retval": "<span style=\"color: gray\"><em>no limit on the number of values a function can leave on the stack</em></span>",
  "recursive-func": "",
  "mutually-recursive-func": "",
  "anonymous-func": "",
  "invoke-anonymous-func": "",
  "closure": "",
  "func-as-val": "",
  "compose-func": "",
  "partial-application": "",
  "fried-quotation": ""
},
"execution-control": {
  "notes-on-conditionals": "<span style=\"color: gray\"><em>conditionals can only be used in word definitions.</em></span><br /><span style=\"color: gray\">endif <em>can be used in place of</em> then</span>",
  "ifelse": ": ifelse rot if drop else nip then ;<br />x @ 0 &gt; x @ x @ negate ifelse",
  "if": "<span style=\"color: gray\"><em>bool</em></span><br />if<br /><span style=\"white-space: pre-wrap;\">  </span><span style=\"color: gray\"><em>if true</em></span><br />then",
  "if-else": "<span style=\"color: gray\"><em>bool</em></span><br />if<br /><span style=\"white-space: pre-wrap;\">  </span><span style=\"color: gray\"><em>if true</em></span><br />else<br /><span style=\"white-space: pre-wrap;\">  </span><span style=\"color: gray\"><em>if false</em></span><br />then",
  "notes-on-loops": "<span style=\"color: gray\"><em>loops can only be used in word definitions.</em></span><br /><span style=\"color: gray\">leave <em>can be used with</em> loop <em>to terminate early</em></span>",
  "conditional-loop": "begin<br /><span style=\"white-space: pre-wrap;\">  </span><span style=\"color: gray\"><em>bool</em></span><br />while<br /><span style=\"white-space: pre-wrap;\">  </span><span style=\"color: gray\"><em>code</em></span><br />repeat",
  "infinite-loop": "begin<br /><span style=\"white-space: pre-wrap;\">  </span><span style=\"color: gray\"><em>code</em></span><br />again",
  "loop-10-times": "10 0 ?do <span style=\"color: gray\"><em>code</em></span> loop",
  "for-loop": "10 0 ?do i <span style=\"color: gray\"><em>code</em></span> loop",
  "for-loop-step-2": "10 0 +do i <span style=\"color: gray\"><em>code</em></span> 2 +loop"
},
"exceptions": {
  "notes-on-exceptions": "<span style=\"color: gray\">throw <em>raises an exception if the top of the data stack is nonzero.</em> exception <em>puts a nonzero value on the stack. If the exception is not handled the string will be displayed by the interpreter on exit.</em> catch <em>can only be used in a word definition.</em></span>",
  "raise-exception": "s\" bam!\" exception throw",
  "handle-exception": "['] <span style=\"color: gray\"><em>risky word</em></span> catch if <span style=\"color: gray\"><em>handle error</em></span> then"
},
"file-handles": {
  "standard-file-handles": "",
  "read-line-from-stdin": "",
  "write-line-to-stdout": "",
  "write-to-stdout": ".\" hello\" cr",
  "redirect-to-file": ""
},
"files": {
  "file-test,-regular-file-text": "",
  "file-size": "",
  "is-file-readable,-writable,-executable": "",
  "set-file-permissions": "",
  "touch-file": "",
  "copy-file,-remove-file,-rename-file": "",
  "create-symlink,-symlink-test,-readlink": "",
  "generate-unused-file-name": ""
},
"directories": {
  "working-directory<br-/>": "",
  "build-pathname": "",
  "dirname-and-basename": "",
  "absolute-pathname": "",
  "make-directory": "",
  "recursive-copy": "",
  "remove-empty-directory": "",
  "remove-directory-and-contents": "",
  "directory-test": ""
},
"processes-environment": {
  "cmd-line-arg": "",
  "program-name": "",
  "env-var": "",
  "user-id-name": "",
  "exit": "bye",
  "external-cmd": "",
  "backticks": "",
  "pid": "",
  "signal-handler": "",
  "send-signal": ""
},
"libraries-namespaces": {
  "interpret-file": "foo.fs include<br /><span style=\"color: gray\"><em>or</em></span><br />s\" foo.fs\" included",
  "load-library": "require foo.fs<br /><span style=\"color: gray\"><em>or</em></span><br />s\" foo.fs\" required",
  "hot-patch": "",
  "load-error": "",
  "main-routine-in-library": "",
  "library-path": "",
  "library-path-environment-variable": "",
  "namespace-declaration": "",
  "unqualified-import-of-namespace": ""
},
"reflection": {
  "query-data-type": "<span style=\"color: gray\"><em>none</em></span>",
  "pretty-print": "",
  "dump-location-and-stack": "<span style=\"white-space: pre-wrap;\">~~</span>",
  "show-code": "see <span style=\"color: gray\"><em>word</em></span>",
  "documentation": ""
},
"graphics": {
  "default-location-of-origin": "",
  "default-scale": "",
  "text": "",
  "render-page-and-start-a-new-one": "",
  "set-current-font": "",
  "built-in-fonts": "",
  "closed-polygon": "",
  "set-current-line-width": "",
  "arc-of-circle": "",
  "bezier-curve": "",
  "filled-polygon": "",
  "set-color": "",
  "translate-coordinates": "",
  "scale-coordinates": "",
  "rotate-coordinates": "",
  "items-in-graphics-state": "",
  "save-graphics-state": "",
  "restore-graphics-state": ""
}
}
